# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strong
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/localer/all/localer.rbi
#
# localer-0.1.1
module Localer
  def self.config; end
  def self.configure(options = nil); end
  def self.data; end
  def self.load_data(source = nil); end
end
module Localer::Rails
  def self.connect!; end
  def self.translations; end
end
module Localer::Ext
end
module Localer::Ext::Hash
end
class Localer::Config
  def self.file_config(filename, path); end
  def self.load(options = nil); end
  def self.parse_locales(hash); end
  extend Dry::Initializer
  include Anonymous_Module_36
  include Dry::Initializer::Mixin::Root
end
class Localer::Config::Locale
  extend Dry::Initializer
  include Anonymous_Module_37
  include Dry::Initializer::Mixin::Root
end
module Anonymous_Module_37
  def __dry_initializer_config__; end
  def __dry_initializer_initialize__(*arg0, **__dry_initializer_options__); end
  def enabled; end
  def exclude; end
  extend Dry::Initializer::Mixin::Local
end
module Anonymous_Module_36
  def __dry_initializer_config__; end
  def __dry_initializer_initialize__(*arg0, **__dry_initializer_options__); end
  def app_path; end
  def exclude; end
  def locale; end
  extend Dry::Initializer::Mixin::Local
end
class Localer::Data
  def complete?; end
  def each; end
  def initialize(*args); end
  def locales; end
  def missing_translations; end
  def translations; end
  extend Dry::Initializer
  include Anonymous_Module_38
  include Dry::Initializer::Mixin::Root
end
class Localer::Data::Service
  def self.call(*args, &block); end
  extend Dry::Initializer
  include Anonymous_Module_39
  include Dry::Initializer::Mixin::Root
end
module Anonymous_Module_39
  def __dry_initializer_config__; end
  def __dry_initializer_initialize__(*arg0); end
  extend Dry::Initializer::Mixin::Local
end
module Anonymous_Module_40
  def __dry_initializer_config__; end
  def __dry_initializer_initialize__(data, *arg1); end
  def data; end
  extend Dry::Initializer::Mixin::Local
end
class Localer::Data::Checker < Localer::Data::Service
  def call; end
  include Anonymous_Module_40
end
module Localer::Ext::String
end
module Anonymous_Module_41
  def __dry_initializer_config__; end
  def __dry_initializer_initialize__(translations, config = nil, *arg2); end
  def config; end
  def translations; end
  extend Dry::Initializer::Mixin::Local
end
class Localer::Data::Processor < Localer::Data::Service
  def call; end
  def data; end
  def exclude?(key, locale); end
  def locales; end
  def match?(key, pattern); end
  def prepare(locale, translation, prefix = nil); end
  include Anonymous_Module_41
end
module Anonymous_Module_42
  def __dry_initializer_config__; end
  def __dry_initializer_initialize__(data, *arg1); end
  def data; end
  extend Dry::Initializer::Mixin::Local
end
class Localer::Data::MissingTranslations < Localer::Data::Service
  def call; end
  include Anonymous_Module_42
end
module Anonymous_Module_38
  def __dry_initializer_config__; end
  def __dry_initializer_initialize__(source = nil, config = nil, *arg2); end
  def config; end
  def source; end
  extend Dry::Initializer::Mixin::Local
end
