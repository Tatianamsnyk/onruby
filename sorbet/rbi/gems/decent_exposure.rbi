# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strong
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/decent_exposure/all/decent_exposure.rbi
#
# decent_exposure-3.0.2
module DecentExposure
end
module DecentExposure::Generators
end
class DecentExposure::Generators::ScaffoldTemplatesGenerator < Rails::Generators::Base
end
module DecentExposure::Controller
  extend ActiveSupport::Concern
end
module DecentExposure::Controller::ClassMethods
  def expose!(name, *args, &block); end
  def expose(*args, &block); end
  def exposure_config(name, options); end
end
class DecentExposure::Exposure
  def assert_incompatible_options_pair(key1, key2); end
  def assert_singleton_option(name); end
  def attribute; end
  def controller; end
  def expose!; end
  def expose_attribute!; end
  def expose_helper_methods!; end
  def initialize(controller, name, fetch_block = nil, **options, &block); end
  def merge_lambda_option(name, body); end
  def normalize_build_params_option; end
  def normalize_fetch_option; end
  def normalize_find_by_option; end
  def normalize_from_option; end
  def normalize_id_option; end
  def normalize_model_option; end
  def normalize_non_proc_option(name); end
  def normalize_options; end
  def normalize_parent_option; end
  def normalize_scope_options; end
  def normalize_with_option; end
  def options; end
  def reverse_merge_config!(name); end
  def self.expose!(*args, &block); end
end
class DecentExposure::Attribute
  def expose!(klass); end
  def fetch; end
  def getter_method_name; end
  def initialize(options); end
  def ivar_name; end
  def name; end
  def setter_method_name; end
end
module DecentExposure::Mailer
  def self.included(base); end
end
