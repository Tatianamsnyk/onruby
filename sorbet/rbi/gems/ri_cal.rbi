# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strong
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/ri_cal/all/ri_cal.rbi
#
# ri_cal-0.8.8
module RiCal
  def self.Alarm(&init_block); end
  def self.Calendar(&init_block); end
  def self.Event(&init_block); end
  def self.Freebusy(&init_block); end
  def self.Journal(&init_block); end
  def self.RationalOffset; end
  def self.Timezone(&init_block); end
  def self.TimezonePeriod(&init_block); end
  def self.Todo(&init_block); end
  def self.debug; end
  def self.debug=(val); end
  def self.libpath(*args); end
  def self.parse(io); end
  def self.parse_string(string); end
  def self.path(*args); end
  def self.require_all_libs_relative_to(fname, dir = nil); end
  def self.ro_calls; end
  def self.ro_calls=(value); end
  def self.ro_misses; end
  def self.ro_misses=(value); end
  def self.version; end
end
module RiCal::CoreExtensions
end
module RiCal::CoreExtensions::Array
end
module RiCal::CoreExtensions::Array::Conversions
  def to_rfc2445_string; end
end
class Array
  include RiCal::CoreExtensions::Array::Conversions
end
module RiCal::CoreExtensions::Date
end
module RiCal::CoreExtensions::Date::Conversions
  def to_date; end
  def to_datetime; end
  def to_overlap_range_end; end
  def to_overlap_range_start; end
  def to_ri_cal_date_or_date_time_value(timezone_finder = nil); end
  def to_ri_cal_date_time_value(timezone_finder = nil); end
  def to_ri_cal_date_value(timezone_finder = nil); end
  def to_ri_cal_occurrence_list_value(timezone_finder = nil); end
  def to_ri_cal_property_value(timezone_finder = nil); end
end
module RiCal::CoreExtensions::Time
end
module RiCal::CoreExtensions::Time::WeekDayPredicates
  def nth_wday_in_month(n, which_wday, for_time = nil); end
  def nth_wday_in_month?(n, which_wday); end
  def start_of_week_with_wkst(wkst); end
end
module RiCal::CoreExtensions::Time::Calculations
  def days_in_month; end
  def iso_week_num(wkst); end
  def iso_weeks_in_year(wkst); end
  def iso_year(wkst); end
  def iso_year_and_week_num(wkst); end
  def iso_year_and_week_one_start(wkst); end
  def iso_year_start(wkst); end
  def leap_year?; end
  def self.convert_wday(wday); end
  def self.iso_week_one(year, wkst); end
end
class Date
  include RiCal::CoreExtensions::Date::Conversions
  include RiCal::CoreExtensions::Time::Calculations
  include RiCal::CoreExtensions::Time::WeekDayPredicates
end
module RiCal::CoreExtensions::DateTime
end
module RiCal::CoreExtensions::DateTime::Conversions
  def to_date; end
  def to_datetime; end
  def to_overlap_range_end; end
  def to_overlap_range_start; end
  def to_ri_cal_date_or_date_time_value(timezone_finder = nil); end
  def to_ri_cal_date_time_value(timezone_finder = nil); end
  def to_ri_cal_occurrence_list_value(timezone_finder = nil); end
  def to_ri_cal_property_value(timezone_finder = nil); end
  def with_floating_timezone; end
end
module RiCal::CoreExtensions::Time::TzidAccess
  def has_floating_timezone?; end
  def set_tzid(time_zone_identifier); end
  def tzid; end
  def tzid=(arg0); end
end
module RiCal::TimeWithZoneExtension
  def has_floating_timezone?; end
  def to_ri_cal_date_or_date_time_value(timezone_finder = nil); end
  def to_ri_cal_date_time_value(timezone_finder = nil); end
  def to_ri_cal_occurrence_list_value(timezone_finder = nil); end
  def tzid; end
end
class ActiveSupport::TimeWithZone
  include RiCal::TimeWithZoneExtension
end
class DateTime < Date
  include RiCal::CoreExtensions::DateTime::Conversions
  include RiCal::CoreExtensions::Time::Calculations
  include RiCal::CoreExtensions::Time::TzidAccess
  include RiCal::CoreExtensions::Time::WeekDayPredicates
end
module RiCal::CoreExtensions::Object
end
module RiCal::CoreExtensions::Object::Conversions
  def to_rfc2445_string; end
  def to_ri_cal_ruby_value; end
end
class Object < BasicObject
  include RiCal::CoreExtensions::Object::Conversions
end
module RiCal::CoreExtensions::String
end
module RiCal::CoreExtensions::String::Conversions
  def to_ri_cal_date_or_date_time_value(timezone_finder = nil); end
  def to_ri_cal_date_time_value(timezone_finder = nil); end
  def to_ri_cal_duration_value(timezone_finder = nil); end
  def to_ri_cal_occurrence_list_value(timezone_finder = nil); end
  def to_ri_cal_text_property; end
end
class String
  include RiCal::CoreExtensions::String::Conversions
end
module RiCal::CoreExtensions::Time::Conversions
  def to_overlap_range_end; end
  def to_overlap_range_start; end
  def to_ri_cal_date_or_date_time_value(timezone_finder = nil); end
  def to_ri_cal_date_time_value(timezone_finder = nil); end
  def to_ri_cal_occurrence_list_value(timezone_finder = nil); end
  def to_ri_cal_property_value(timezone_finder = nil); end
  def with_floating_timezone; end
end
class Time
  include RiCal::CoreExtensions::Time::Calculations
  include RiCal::CoreExtensions::Time::Conversions
  include RiCal::CoreExtensions::Time::TzidAccess
  include RiCal::CoreExtensions::Time::WeekDayPredicates
end
